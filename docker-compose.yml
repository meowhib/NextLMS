version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3100:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/nextlms
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_USE_SSL=false
    depends_on:
      db-migrate:
        condition: service_completed_successfully
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Development volumes - comment out for production
    # volumes:
    #   - .:/app
    #   - /app/node_modules
    #   - /app/.next

  db:
    image: postgres:15-alpine
    ports:
      - "5532:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=nextlms
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        npx prisma migrate deploy &&
        npx prisma db seed
      "
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/nextlms
    depends_on:
      db:
        condition: service_healthy

  minio:
    image: minio/minio
    ports:
      - "9100:9000"
      - "9101:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO bucket creation service
  createbuckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin); do
        echo 'Waiting for MinIO...' && sleep 2;
      done &&
      /usr/bin/mc mb myminio/courses || true &&
      exit 0
      "

volumes:
  postgres_data:
  minio_data: 